{"version":3,"sources":["SelectedFoods.js","Client.js","FoodSearch.js","App.js","index.js"],"names":["SelectedFoods","props","foods","foodRows","map","food","idx","key","description","className","kcal","protein_g","fat_g","carbohydrate_g","href","target","onClick","onFoodClick","colSpan","id","sum","prop","reduce","memo","parseInt","toFixed","checkStatus","response","status","error","Error","statusText","console","log","parseJSON","json","Client","search","query","cb","fetch","accept","then","MATCHING_ITEM_LIMIT","FoodSearch","state","showRemoveIcon","searchValue","handleSearchChange","e","value","setState","slice","handleSearchCancel","this","removeIconStyle","visibility","type","placeholder","onChange","style","React","Component","App","selectedFoods","removeFoodItem","itemIndex","filteredFoods","filter","item","addFood","newFoods","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a88ee5ad.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function SelectedFoods(props) {\n  const { foods } = props;\n\n  const foodRows = foods.map((food, idx) => (\n    <tr key={idx}>\n      <td>{food.description}</td>\n      <td className=\"right aligned\">{food.kcal}</td>\n      <td className=\"right aligned\">{food.protein_g}</td>\n      <td className=\"right aligned\">{food.fat_g}</td>\n      <td className=\"right aligned\">{food.carbohydrate_g}</td>\n      <td className=\"centre aligned\"><a href={\"https://www.google.com/search?q=\"+ food.description} target='_blank'>additional details</a></td>\n      <td  onClick={() => props.onFoodClick(idx)}>remove</td>\n    </tr>\n  ));\n\n  return (\n    <table className=\"ui selectable structured large table\">\n      <thead>\n        <tr>\n          <th colSpan=\"7\">\n            <h3>Selected foods</h3>\n          </th>\n        </tr>\n        <tr>\n          <th className=\"eight wide\">Description</th>\n          <th>Kcal</th>\n          <th>Protein (g)</th>\n          <th>Fat (g)</th>\n          <th>Carbs (g)</th>\n          <th>additional info</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {foodRows}\n      </tbody>\n      <tfoot>\n        <tr>\n          <th>Total</th>\n          <th className=\"right aligned\" id=\"total-kcal\">\n            {sum(foods, \"kcal\")}\n          </th>\n          <th className=\"right aligned\" id=\"total-protein_g\">\n            {sum(foods, \"protein_g\")}\n          </th>\n          <th className=\"right aligned\" id=\"total-fat_g\">\n            {sum(foods, \"fat_g\")}\n          </th>\n          <th className=\"right aligned\" id=\"total-carbohydrate_g\">\n            {sum(foods, \"carbohydrate_g\")}\n          </th>\n          <th className=\"right aligned\" id=\"additional_info\"/>\n          <th className=\"right aligned\" id=\"remove\"/>\n        </tr>\n      </tfoot>\n    </table>\n  );\n}\n\nfunction sum(foods, prop) {\n  return foods\n    .reduce((memo, food) => parseInt(food[prop], 10) + memo, 0.0)\n    .toFixed(2);\n}\n","/* eslint-disable no-undef */\nfunction search(query, cb) {\n  return fetch(`api/food?q=${query}`, {\n    accept: \"application/json\"\n  })\n    .then(checkStatus)\n    .then(parseJSON)\n    .then(cb);\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(`HTTP Error ${response.statusText}`);\n  error.status = response.statusText;\n  error.response = response;\n  console.log(error); // eslint-disable-line no-console\n  throw error;\n}\n\nfunction parseJSON(response) {\n  return response.json();\n}\n\nconst Client = { search };\nexport default Client;\n","import React from \"react\";\nimport Client from \"./Client\";\n\nconst MATCHING_ITEM_LIMIT = 25;\n\nclass FoodSearch extends React.Component {\n  state = {\n    foods: [],\n    showRemoveIcon: false,\n    searchValue: \"\"\n  };\n\n  handleSearchChange = e => {\n    const value = e.target.value;\n\n    this.setState({\n      searchValue: value\n    });\n\n    if (value === \"\") {\n      this.setState({\n        foods: [],\n        showRemoveIcon: false\n      });\n    } else {\n      this.setState({\n        showRemoveIcon: true\n      });\n\n      Client.search(value, foods => {\n        this.setState({\n          foods: foods.slice(0, MATCHING_ITEM_LIMIT)\n        });\n      });\n    }\n  };\n\n  handleSearchCancel = () => {\n    this.setState({\n      foods: [],\n      showRemoveIcon: false,\n      searchValue: \"\"\n    });\n  };\n\n  render() {\n    const { showRemoveIcon, foods } = this.state;\n    const removeIconStyle = showRemoveIcon ? {} : { visibility: \"hidden\" };\n\n    const foodRows = foods.map((food, idx) => (\n      <tr key={idx} onClick={() => this.props.onFoodClick(food)}>\n        <td>{food.description}</td>\n        <td className=\"right aligned\">{food.kcal}</td>\n        <td className=\"right aligned\">{food.protein_g}</td>\n        <td className=\"right aligned\">{food.fat_g}</td>\n        <td className=\"right aligned\">{food.carbohydrate_g}</td>\n      </tr>\n    ));\n\n    return (\n      <div id=\"food-search\">\n        <table className=\"ui selectable structured large table\">\n          <thead>\n            <tr>\n              <th colSpan=\"5\">\n                <div className=\"ui fluid search\">\n                  <div className=\"ui icon input\">\n                    <input\n                      className=\"prompt\"\n                      type=\"text\"\n                      placeholder=\"Search foods...\"\n                      value={this.state.searchValue}\n                      onChange={this.handleSearchChange}\n                    />\n                    <i className=\"search icon\" />\n                  </div>\n                  <i\n                    className=\"remove icon\"\n                    onClick={this.handleSearchCancel}\n                    style={removeIconStyle}\n                  />\n                </div>\n              </th>\n            </tr>\n            <tr>\n              <th className=\"eight wide\">Description</th>\n              <th>Kcal</th>\n              <th>Protein (g)</th>\n              <th>Fat (g)</th>\n              <th>Carbs (g)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {foodRows}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default FoodSearch;\n","import React, { Component } from \"react\";\nimport SelectedFoods from \"./SelectedFoods\";\nimport FoodSearch from \"./FoodSearch\";\n\nclass App extends Component {\n  state = {\n    selectedFoods: []\n  };\n\n  removeFoodItem = itemIndex => {\n    const filteredFoods = this.state.selectedFoods.filter(\n      (item, idx) => itemIndex !== idx\n    );\n    this.setState({ selectedFoods: filteredFoods });\n  };\n\n  addFood = food => {\n    const newFoods = this.state.selectedFoods.concat(food);\n    this.setState({ selectedFoods: newFoods });\n  };\n\n  render() {\n    const { selectedFoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"ui text container\">\n          <SelectedFoods\n            foods={selectedFoods}\n            onFoodClick={this.removeFoodItem}\n          />\n          <FoodSearch onFoodClick={this.addFood} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"./semantic/dist/semantic.min.css\"\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\") // eslint-disable-line no-undef\n);\n"],"sourceRoot":""}